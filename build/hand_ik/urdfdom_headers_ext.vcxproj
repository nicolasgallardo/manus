<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{C60372F2-4851-3E36-9108-D662914633C5}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>urdfdom_headers_ext</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\nicol\Alt_Bionics\GitHub\manus\build\CMakeFiles\43ceb7fbda84c20faa4301f2a9eab544\urdfdom_headers_ext-mkdir.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Creating directories for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -Dcfgdir=/Debug -P C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/tmp/urdfdom_headers_ext-mkdirs.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/Debug/urdfdom_headers_ext-mkdir
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-mkdir</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Creating directories for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -Dcfgdir=/Release -P C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/tmp/urdfdom_headers_ext-mkdirs.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/Release/urdfdom_headers_ext-mkdir
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-mkdir</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Creating directories for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -Dcfgdir=/MinSizeRel -P C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/tmp/urdfdom_headers_ext-mkdirs.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/MinSizeRel/urdfdom_headers_ext-mkdir
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-mkdir</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Creating directories for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -Dcfgdir=/RelWithDebInfo -P C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/tmp/urdfdom_headers_ext-mkdirs.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/RelWithDebInfo/urdfdom_headers_ext-mkdir
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-mkdir</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\nicol\Alt_Bionics\GitHub\manus\build\CMakeFiles\43ceb7fbda84c20faa4301f2a9eab544\urdfdom_headers_ext-download.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Performing download step (download, verify and extract) for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/download-urdfdom_headers_ext.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/verify-urdfdom_headers_ext.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/extract-urdfdom_headers_ext.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/Debug/urdfdom_headers_ext-download
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\download-urdfdom_headers_ext.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\urdfdom_headers_ext-urlinfo.txt;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-mkdir;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-download</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Performing download step (download, verify and extract) for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/download-urdfdom_headers_ext.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/verify-urdfdom_headers_ext.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/extract-urdfdom_headers_ext.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/Release/urdfdom_headers_ext-download
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\download-urdfdom_headers_ext.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\urdfdom_headers_ext-urlinfo.txt;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-mkdir;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-download</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Performing download step (download, verify and extract) for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/download-urdfdom_headers_ext.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/verify-urdfdom_headers_ext.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/extract-urdfdom_headers_ext.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/MinSizeRel/urdfdom_headers_ext-download
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\download-urdfdom_headers_ext.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\urdfdom_headers_ext-urlinfo.txt;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-mkdir;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-download</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Performing download step (download, verify and extract) for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/download-urdfdom_headers_ext.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/verify-urdfdom_headers_ext.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_MESSAGE_LOG_LEVEL=VERBOSE -P C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/extract-urdfdom_headers_ext.cmake
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/RelWithDebInfo/urdfdom_headers_ext-download
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\download-urdfdom_headers_ext.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\urdfdom_headers_ext-urlinfo.txt;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-mkdir;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-download</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\nicol\Alt_Bionics\GitHub\manus\build\CMakeFiles\43ceb7fbda84c20faa4301f2a9eab544\urdfdom_headers_ext-update_disconnected.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">No update_disconnected step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/Debug/urdfdom_headers_ext-update_disconnected
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\urdfdom_headers_ext-update-info.txt;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-download;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-update_disconnected</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">No update_disconnected step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/Release/urdfdom_headers_ext-update_disconnected
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\urdfdom_headers_ext-update-info.txt;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-download;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-update_disconnected</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">No update_disconnected step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/MinSizeRel/urdfdom_headers_ext-update_disconnected
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\urdfdom_headers_ext-update-info.txt;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-download;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-update_disconnected</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">No update_disconnected step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/RelWithDebInfo/urdfdom_headers_ext-update_disconnected
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\urdfdom_headers_ext-update-info.txt;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-download;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-update_disconnected</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\nicol\Alt_Bionics\GitHub\manus\build\CMakeFiles\43ceb7fbda84c20faa4301f2a9eab544\urdfdom_headers_ext-patch_disconnected.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">No patch_disconnected step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/Debug/urdfdom_headers_ext-patch_disconnected
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\urdfdom_headers_ext-patch-info.txt;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-update_disconnected;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-patch_disconnected</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">No patch_disconnected step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/Release/urdfdom_headers_ext-patch_disconnected
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\urdfdom_headers_ext-patch-info.txt;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-update_disconnected;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-patch_disconnected</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">No patch_disconnected step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/MinSizeRel/urdfdom_headers_ext-patch_disconnected
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\urdfdom_headers_ext-patch-info.txt;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-update_disconnected;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-patch_disconnected</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">No patch_disconnected step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E echo_append
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/RelWithDebInfo/urdfdom_headers_ext-patch_disconnected
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\urdfdom_headers_ext-patch-info.txt;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-update_disconnected;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-patch_disconnected</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\nicol\Alt_Bionics\GitHub\manus\build\CMakeFiles\43ceb7fbda84c20faa4301f2a9eab544\urdfdom_headers_ext-configure.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Performing configure step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Release -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL -DBUILD_SHARED_LIBS=OFF -DURDFDOM_HEADERS_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=C:/Users/nicol/Alt_Bionics/GitHub/manus/build/stage/urdfdom_headers "-GVisual Studio 17 2022" -Ax64 "-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community" -S C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext -B C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/Debug/urdfdom_headers_ext-configure
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\tmp\urdfdom_headers_ext-cfgcmd.txt;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-patch_disconnected;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-configure</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Performing configure step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Release -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL -DBUILD_SHARED_LIBS=OFF -DURDFDOM_HEADERS_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=C:/Users/nicol/Alt_Bionics/GitHub/manus/build/stage/urdfdom_headers "-GVisual Studio 17 2022" -Ax64 "-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community" -S C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext -B C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/Release/urdfdom_headers_ext-configure
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\tmp\urdfdom_headers_ext-cfgcmd.txt;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-patch_disconnected;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-configure</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Performing configure step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Release -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL -DBUILD_SHARED_LIBS=OFF -DURDFDOM_HEADERS_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=C:/Users/nicol/Alt_Bionics/GitHub/manus/build/stage/urdfdom_headers "-GVisual Studio 17 2022" -Ax64 "-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community" -S C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext -B C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/MinSizeRel/urdfdom_headers_ext-configure
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\tmp\urdfdom_headers_ext-cfgcmd.txt;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-patch_disconnected;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-configure</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Performing configure step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Release -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL -DBUILD_SHARED_LIBS=OFF -DURDFDOM_HEADERS_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=C:/Users/nicol/Alt_Bionics/GitHub/manus/build/stage/urdfdom_headers "-GVisual Studio 17 2022" -Ax64 "-DCMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community" -S C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext -B C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/RelWithDebInfo/urdfdom_headers_ext-configure
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\tmp\urdfdom_headers_ext-cfgcmd.txt;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-patch_disconnected;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-configure</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\nicol\Alt_Bionics\GitHub\manus\build\CMakeFiles\43ceb7fbda84c20faa4301f2a9eab544\urdfdom_headers_ext-build.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Performing build step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" --build . --config Debug
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/Debug/urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-configure;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-build</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Performing build step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" --build . --config Release
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/Release/urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-configure;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-build</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Performing build step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" --build . --config MinSizeRel
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/MinSizeRel/urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-configure;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-build</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Performing build step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" --build . --config RelWithDebInfo
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/RelWithDebInfo/urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-configure;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-build</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\nicol\Alt_Bionics\GitHub\manus\build\CMakeFiles\43ceb7fbda84c20faa4301f2a9eab544\urdfdom_headers_ext-install.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Performing install step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
cd C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" --build . --config Debug --target install
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/Debug/urdfdom_headers_ext-install
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-install</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Performing install step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
cd C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" --build . --config Release --target install
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/Release/urdfdom_headers_ext-install
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-install</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Performing install step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
cd C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" --build . --config MinSizeRel --target install
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/MinSizeRel/urdfdom_headers_ext-install
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-install</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Performing install step for 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
cd C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-build
if %errorlevel% neq 0 goto :cmEnd
C:
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" --build . --config RelWithDebInfo --target install
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/RelWithDebInfo/urdfdom_headers_ext-install
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-install</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\nicol\Alt_Bionics\GitHub\manus\build\CMakeFiles\1c7a663a74d1ddb98f8ed84fa57e80b0\urdfdom_headers_ext-complete.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Completed 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/CMakeFiles/Debug
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/CMakeFiles/Debug/urdfdom_headers_ext-complete
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/Debug/urdfdom_headers_ext-done
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-install;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-mkdir;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-download;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-update_disconnected;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-patch_disconnected;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-configure;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Debug\urdfdom_headers_ext-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\CMakeFiles\Debug\urdfdom_headers_ext-complete</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Completed 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/CMakeFiles/Release
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/CMakeFiles/Release/urdfdom_headers_ext-complete
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/Release/urdfdom_headers_ext-done
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-install;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-mkdir;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-download;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-update_disconnected;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-patch_disconnected;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-configure;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\Release\urdfdom_headers_ext-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\CMakeFiles\Release\urdfdom_headers_ext-complete</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Completed 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/CMakeFiles/MinSizeRel
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/CMakeFiles/MinSizeRel/urdfdom_headers_ext-complete
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/MinSizeRel/urdfdom_headers_ext-done
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-install;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-mkdir;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-download;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-update_disconnected;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-patch_disconnected;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-configure;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\MinSizeRel\urdfdom_headers_ext-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\CMakeFiles\MinSizeRel\urdfdom_headers_ext-complete</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Completed 'urdfdom_headers_ext'</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E make_directory C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/CMakeFiles/RelWithDebInfo
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/CMakeFiles/RelWithDebInfo/urdfdom_headers_ext-complete
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files\CMake\bin\cmake.exe" -E touch C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/urdfdom_headers_ext-prefix/src/urdfdom_headers_ext-stamp/RelWithDebInfo/urdfdom_headers_ext-done
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-install;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-mkdir;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-download;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-update_disconnected;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-patch_disconnected;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-configure;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\src\urdfdom_headers_ext-stamp\RelWithDebInfo\urdfdom_headers_ext-build;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\CMakeFiles\RelWithDebInfo\urdfdom_headers_ext-complete</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\nicol\Alt_Bionics\GitHub\manus\build\CMakeFiles\0b8a5a4f5e0cf5c8164ada26b4562087\urdfdom_headers_ext.rule">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\CMakeFiles\Debug\urdfdom_headers_ext-complete;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\CMakeFiles\urdfdom_headers_ext</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\CMakeFiles\Release\urdfdom_headers_ext-complete;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\CMakeFiles\urdfdom_headers_ext</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\CMakeFiles\MinSizeRel\urdfdom_headers_ext-complete;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\CMakeFiles\urdfdom_headers_ext</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</VerifyInputsAndOutputsExist>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'"></Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\CMakeFiles\RelWithDebInfo\urdfdom_headers_ext-complete;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\CMakeFiles\urdfdom_headers_ext</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
      <VerifyInputsAndOutputsExist Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</VerifyInputsAndOutputsExist>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="C:\Users\nicol\Alt_Bionics\GitHub\manus\hand_ik\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule C:/Users/nicol/Alt_Bionics/GitHub/manus/hand_ik/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/nicol/Alt_Bionics/GitHub/manus -BC:/Users/nicol/Alt_Bionics/GitHub/manus/build --check-stamp-file C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\PatchInfo.txt.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\RepositoryInfo.txt.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\UpdateInfo.txt.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\cfgcmd.txt.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\download.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\extractfile.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\gitclone.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\gitupdate.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\mkdirs.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\shared_internal_commands.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\FetchContent.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\FindGit.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\FindPackageMessage.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\pinocchio_ext-prefix\tmp\pinocchio_ext-mkdirs.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\tinyxml2_ext-prefix\tmp\tinyxml2_ext-mkdirs.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_ext-prefix\tmp\urdfdom_ext-mkdirs.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\tmp\urdfdom_headers_ext-mkdirs.cmake;C:\Users\nicol\Alt_Bionics\GitLab\surge\firmware\Apps\pinocchio_ik_v2\hand_superbuild\build\stage\pinocchio\lib\cmake\pinocchio\pinocchioConfig.cmake;C:\Users\nicol\Alt_Bionics\GitLab\surge\firmware\Apps\pinocchio_ik_v2\hand_superbuild\build\stage\pinocchio\lib\cmake\pinocchio\pinocchioConfigVersion.cmake;C:\Users\nicol\Alt_Bionics\GitLab\surge\firmware\Apps\pinocchio_ik_v2\hand_superbuild\build\stage\urdfdom\lib\urdfdom\cmake\urdfdom-config.cmake;C:\Users\nicol\Alt_Bionics\GitLab\surge\firmware\Apps\pinocchio_ik_v2\hand_superbuild\build\stage\urdfdom\lib\urdfdom\cmake\urdfdom-configVersion.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule C:/Users/nicol/Alt_Bionics/GitHub/manus/hand_ik/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/nicol/Alt_Bionics/GitHub/manus -BC:/Users/nicol/Alt_Bionics/GitHub/manus/build --check-stamp-file C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\PatchInfo.txt.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\RepositoryInfo.txt.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\UpdateInfo.txt.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\cfgcmd.txt.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\download.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\extractfile.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\gitclone.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\gitupdate.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\mkdirs.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\shared_internal_commands.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\FetchContent.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\FindGit.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\FindPackageMessage.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\pinocchio_ext-prefix\tmp\pinocchio_ext-mkdirs.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\tinyxml2_ext-prefix\tmp\tinyxml2_ext-mkdirs.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_ext-prefix\tmp\urdfdom_ext-mkdirs.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\tmp\urdfdom_headers_ext-mkdirs.cmake;C:\Users\nicol\Alt_Bionics\GitLab\surge\firmware\Apps\pinocchio_ik_v2\hand_superbuild\build\stage\pinocchio\lib\cmake\pinocchio\pinocchioConfig.cmake;C:\Users\nicol\Alt_Bionics\GitLab\surge\firmware\Apps\pinocchio_ik_v2\hand_superbuild\build\stage\pinocchio\lib\cmake\pinocchio\pinocchioConfigVersion.cmake;C:\Users\nicol\Alt_Bionics\GitLab\surge\firmware\Apps\pinocchio_ik_v2\hand_superbuild\build\stage\urdfdom\lib\urdfdom\cmake\urdfdom-config.cmake;C:\Users\nicol\Alt_Bionics\GitLab\surge\firmware\Apps\pinocchio_ik_v2\hand_superbuild\build\stage\urdfdom\lib\urdfdom\cmake\urdfdom-configVersion.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule C:/Users/nicol/Alt_Bionics/GitHub/manus/hand_ik/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/nicol/Alt_Bionics/GitHub/manus -BC:/Users/nicol/Alt_Bionics/GitHub/manus/build --check-stamp-file C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\PatchInfo.txt.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\RepositoryInfo.txt.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\UpdateInfo.txt.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\cfgcmd.txt.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\download.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\extractfile.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\gitclone.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\gitupdate.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\mkdirs.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\shared_internal_commands.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\FetchContent.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\FindGit.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\FindPackageMessage.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\pinocchio_ext-prefix\tmp\pinocchio_ext-mkdirs.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\tinyxml2_ext-prefix\tmp\tinyxml2_ext-mkdirs.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_ext-prefix\tmp\urdfdom_ext-mkdirs.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\tmp\urdfdom_headers_ext-mkdirs.cmake;C:\Users\nicol\Alt_Bionics\GitLab\surge\firmware\Apps\pinocchio_ik_v2\hand_superbuild\build\stage\pinocchio\lib\cmake\pinocchio\pinocchioConfig.cmake;C:\Users\nicol\Alt_Bionics\GitLab\surge\firmware\Apps\pinocchio_ik_v2\hand_superbuild\build\stage\pinocchio\lib\cmake\pinocchio\pinocchioConfigVersion.cmake;C:\Users\nicol\Alt_Bionics\GitLab\surge\firmware\Apps\pinocchio_ik_v2\hand_superbuild\build\stage\urdfdom\lib\urdfdom\cmake\urdfdom-config.cmake;C:\Users\nicol\Alt_Bionics\GitLab\surge\firmware\Apps\pinocchio_ik_v2\hand_superbuild\build\stage\urdfdom\lib\urdfdom\cmake\urdfdom-configVersion.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule C:/Users/nicol/Alt_Bionics/GitHub/manus/hand_ik/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SC:/Users/nicol/Alt_Bionics/GitHub/manus -BC:/Users/nicol/Alt_Bionics/GitHub/manus/build --check-stamp-file C:/Users/nicol/Alt_Bionics/GitHub/manus/build/hand_ik/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\PatchInfo.txt.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\RepositoryInfo.txt.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\UpdateInfo.txt.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\cfgcmd.txt.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\download.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\extractfile.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\gitclone.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\gitupdate.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\mkdirs.cmake.in;C:\Program Files\CMake\share\cmake-4.1\Modules\ExternalProject\shared_internal_commands.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\FetchContent.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\FindGit.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\FindPackageHandleStandardArgs.cmake;C:\Program Files\CMake\share\cmake-4.1\Modules\FindPackageMessage.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\pinocchio_ext-prefix\tmp\pinocchio_ext-mkdirs.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\tinyxml2_ext-prefix\tmp\tinyxml2_ext-mkdirs.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_ext-prefix\tmp\urdfdom_ext-mkdirs.cmake;C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\urdfdom_headers_ext-prefix\tmp\urdfdom_headers_ext-mkdirs.cmake;C:\Users\nicol\Alt_Bionics\GitLab\surge\firmware\Apps\pinocchio_ik_v2\hand_superbuild\build\stage\pinocchio\lib\cmake\pinocchio\pinocchioConfig.cmake;C:\Users\nicol\Alt_Bionics\GitLab\surge\firmware\Apps\pinocchio_ik_v2\hand_superbuild\build\stage\pinocchio\lib\cmake\pinocchio\pinocchioConfigVersion.cmake;C:\Users\nicol\Alt_Bionics\GitLab\surge\firmware\Apps\pinocchio_ik_v2\hand_superbuild\build\stage\urdfdom\lib\urdfdom\cmake\urdfdom-config.cmake;C:\Users\nicol\Alt_Bionics\GitLab\surge\firmware\Apps\pinocchio_ik_v2\hand_superbuild\build\stage\urdfdom\lib\urdfdom\cmake\urdfdom-configVersion.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <None Include="C:\Users\nicol\Alt_Bionics\GitHub\manus\build\hand_ik\CMakeFiles\urdfdom_headers_ext">
    </None>
  </ItemGroup>
  <ItemGroup />
  <ItemGroup>
    <ProjectReference Include="C:\Users\nicol\Alt_Bionics\GitHub\manus\build\ZERO_CHECK.vcxproj">
      <Project>{367A6C6F-4610-3542-AF57-9D31102CFD48}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>